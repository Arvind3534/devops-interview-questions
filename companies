 
once you stop the public ip if start again ip address will be change then what to do to make it same?
=> Attach elastic ip.

how many Elastic IPs per Region?
Elastic IP Address Limit : five
By default, all AWS accounts are limited to five (5) Elastic IP addresses per Region

How to install aws cli?
=> pip install awscli

How to check aws cli installed or not?
=> aws --version 

How to configure aws account?
=> aws configure

Command to check list of buckets in aws account?
=> aws s3 ls

Aws cli configuration files location?
=> ~/.aws/

Aws cli configuration files?
=> ~/.aws/config => region=us-west-2, output=json 
  ~/.aws/credentials => aws_access_key_id, aws_secret_access_key

There are two windows machine on two diff VPC and one is public and second one is private how to connect them?
=>  

If we deployed failed build on production server then what strategy you use for rollback?
=>

What is the "property" tag in pom.xml
=><properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

What thresold value you have set for jacoco plugin
=> min and max threshold in percentage 50-80

diff between dependencies and dependenciesmanager tags in pom.xml?
=>Dependency Management allows to consolidate and centralize the management of dependency versions without adding dependencies which are inherited by all children. 
This is especially useful when you have a set of projects (i.e. more than one) that inherits a common parent.
Another extremely important use case of dependencyManagement is the control of versions of artifacts used in transitive dependencies.
Artifacts specified in the <dependencies> section will ALWAYS be included as a dependency of the child module(s).

Artifacts specified in the <dependencyManagement> section, will only be included in the child module if they were also specified in the <dependencies> section of the child module itself. 
Why is it good you ask? because you specify the version and/or scope in the parent, and you can leave them out when specifying the dependencies in the child POM. 
This can help you use unified versions for dependencies for child modules, without specifying the version in each child module.

diff between pugins and pluginsmanager tags in pom.xml?  
=>You use pluginManagement in a parent pom to configure it in case any child pom wants to use it, 
but not every child plugin wants to use it. An example can be that your super pom defines some options for the maven Javadoc plugin. 
Not each child pom might want to use Javadoc, so you define those defaults in a pluginManagement section. 
The child pom that wants to use the Javadoc plugin, just defines a plugin section and will inherit the configuration from the pluginManagement definition in the parent pom.

If your pem file is gone then how to connect to the ec2 instance?
=>

What are types of ec2 instance?
=>

Write a command to connect one instance to another in windows and ubunutu?
=>

How do you send an email to the user who commited the code and build fails?
=>

docker stop and start?
=>

git pull vs fetch
=>

what is git config?
=>

What is staging and index in git?
=>

Newtworking model used in the docker?
=>

Application log monitoring tools?
=> splunk, elk, lambda


git clone using jenkins?
=>

Why ansible is configuration management tool?
=>

How to share volume to multiple containers?
=>

If pod has multiple containers then how to share volume between them?
=>

How to automate CI-CD pipeline?
=> goto github repo => settings => Webhooks => add webhook => add url http://jenkins_server_url/github-webhook/ 
  then in jenkins selecting github hook trigger for scm polling option in build trigger section.
